package mycodes;


public class CDpositionAverage {	
public static double posAverage(String s) {
	
	
	//int n = (s.length() * (s.length()-1)) / 2 ;
	int count =0;
	int t =0;
	int total =0;
	String [] parts = s.split(",");
//	System.out.println(parts.length);
//	int a = parts.length;
//	int b = parts[1].length() - 1;
//	total = a *b ;
	//parts[0] = parts[0].concat(" ");
	for (int i=0;i<parts.length;i++)
	{
		System.out.print(parts[i]);
	}
	
	for (int i =0;i<parts.length;i++)
	{ 
		for (int j =i+1; j<parts.length  ; j++)
		{
			for (int k =0; k< parts[i].length() ;k++)
			{
			//System.out.println(" " +parts[i].charAt(k));	
			if ( parts[i].charAt(k) == (parts[j].charAt(k))) {count += 1;}
			total ++;
			}
			
		}
		
	}
	
	for (int i=0; i<parts.length;i++)
	{
		System.out.println(parts[0].charAt(i));
		if (parts[0].charAt(i) == parts[parts.length-1].charAt(i)) {t ++; System.out.println(t++);};
	}
	//System.out.println(total);
	return (100 * (count +t) / total);
		        
    }

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		System.out.println("  "+posAverage("6900690040, 4690606946, 9990494604"));
		//System.out.println(posAverage("444996, 699990, 666690, 096904, 600644, 640646, 606469, 409694, 666094, 606490"));
		//System.out.println(posAverage("466960, 069060, 494940, 060069, 060090, 640009, 496464, 606900, 004000, 944096"));
	}

}
/*Given string s = "444996, 699990, 666690, 096904, 600644, 640646, 606469, 409694, 666094, 606490" 
 * composing a set of n = 10 substrings (hence 45 combinations), pos_average returns 29.2592592593
 * 
 * s1 = "6900690040"
s2 = "4690606946"
s3 = "9990494604"

 * Given n substrings (n >= 2) in a string s our
 *  function pos_average will calculate the average percentage of positions
 *   that are the same between the (n * (n-1)) / 2 sets of substrings taken 
 *   amongst the given n substrings. It can happen that some substrings are 
 *   duplicate but since their ranks are not the same in s they are considered 
 *   as different substring
 */